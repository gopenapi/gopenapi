openapi: 3.0.1
info:
  title: Swagger Petstore
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key "special-key" to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://petstore.swagger.io/v2
- url: http://petstore.swagger.io/v2
tags:
- name: pet
  description: Everything about your Pets
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: store
  description: Access to Petstore orders
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
paths:
  /pet/findByStatus:
    get:
      parameters:
      - name: status
        schema:
          type: array
          items:
            type: string
            default: available
            enum:
            - available
            - pending
            - sold
        in: query
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Id is Pet ID
                    category:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      description: Category Is pet category
                    name:
                      type: string
                      description: Name is Pet name
                    tags:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      description: Tag is Pet Tag
                    status:
                      type: string
                      default: available
                      enum:
                      - available
                      - pending
                      - sold
                      description: PetStatus
        "401":
          description: 没权限
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 没权限
      tags:
      - pet
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  /pet/{petId}:
    get:
      parameters:
      - in: path
        name: petId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Id is Pet ID
                  category:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    description: Category Is pet category
                  name:
                    type: string
                    description: Name is Pet name
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                    description: Tag is Pet Tag
                  status:
                    type: string
                    default: available
                    enum:
                    - available
                    - pending
                    - sold
                    description: PetStatus
        "404":
          description: Not Found Pet
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Not Found Pet
      tags:
      - pet
      operationId: getPetById
      security:
      - api_key: []
    post:
      tags:
      - pet
      summary: Updates a pet in the store with form data
      operationId: updatePetWithForm
      parameters:
      - name: petId
        in: path
        description: ID of pet that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - petstore_auth:
        - write:pets
        - read:pets
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Pet:
      type: object
      properties:
        id:
          type: integer
          description: Id is Pet ID
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
          description: Category Is pet category
        name:
          type: string
          description: Name is Pet name
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
          description: Tag is Pet Tag
        status:
          type: string
          default: available
          enum:
          - available
          - pending
          - sold
          description: PetStatus
      required:
      - name
      - photoUrls
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
